// Code generated by soagen; DO NOT EDIT.
package main

import (
	"slices"
)

type UserSlice struct {
	ID      []int
	Name    []string
	deleted []bool
}

func (s UserSlice) Get(i int) User {
	var t User
	t.ID = s.ID[i]
	t.Name = s.Name[i]
	t.deleted = s.deleted[i]
	return t
}

func (s UserSlice) Set(i int, t User) {
	s.ID[i] = t.ID
	s.Name[i] = t.Name
	s.deleted[i] = t.deleted
}

func (s UserSlice) Len() int {
	return len(s.ID)
}

func (s UserSlice) Cap() int {
	return min(
		cap(s.ID),
		cap(s.Name),
		cap(s.deleted),
	)
}

func (s UserSlice) Slice(low, high, max int) UserSlice {
	return UserSlice{
		ID:      s.ID[low:high:max],
		Name:    s.Name[low:high:max],
		deleted: s.deleted[low:high:max],
	}
}

func (s UserSlice) Grow(n int) UserSlice {
	return UserSlice{
		ID:      slices.Grow(s.ID, n),
		Name:    slices.Grow(s.Name, n),
		deleted: slices.Grow(s.deleted, n),
	}
}
